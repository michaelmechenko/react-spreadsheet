{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\Documents\\\\mechenko_main\\\\PEDAGOGY\\\\fa23\\\\CS4530\\\\project\\\\team111-project\\\\implementation\\\\src\\\\components\\\\SpreadsheetPage.component.tsx\";\nimport React from \"react\";\nimport SpreadsheetCell from \"./SpreadsheetCell.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SpreadsheetPage({\n  pageModel,\n  handleCellClick,\n  selectedCell\n}) {\n  const sheetCells = pageModel.getSheet();\n  const handleCellDisplay = cell => {\n    return cell.getDisplay();\n  };\n  const renderCells = () => {\n    const rows = sheetCells.map((row, rowIndex) => {\n      const cols = row.map((cell, colIndex) => {\n        return /*#__PURE__*/_jsxDEV(SpreadsheetCell, {\n          reference: pageModel.getCellAt(rowIndex, colIndex).determineReference(rowIndex, colIndex),\n          cellModel: cell,\n          isSelected: pageModel.getSelectedCellReference() === pageModel.getCellAt(rowIndex, colIndex).determineReference(rowIndex, colIndex),\n          handleCellClick: handleCellClick,\n          cellDisplay: handleCellDisplay(pageModel.getCellAt(rowIndex, colIndex))\n        }, pageModel.getCellAt(rowIndex, colIndex).determineReference(rowIndex, colIndex), false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this);\n      });\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-row\",\n        children: cols\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this);\n    });\n    return rows;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: renderCells()\n  }, void 0, false);\n}\n_c = SpreadsheetPage;\nvar _c;\n$RefreshReg$(_c, \"SpreadsheetPage\");","map":{"version":3,"names":["React","SpreadsheetCell","jsxDEV","_jsxDEV","Fragment","_Fragment","SpreadsheetPage","pageModel","handleCellClick","selectedCell","sheetCells","getSheet","handleCellDisplay","cell","getDisplay","renderCells","rows","map","row","rowIndex","cols","colIndex","reference","getCellAt","determineReference","cellModel","isSelected","getSelectedCellReference","cellDisplay","fileName","_jsxFileName","lineNumber","columnNumber","className","children","_c","$RefreshReg$"],"sources":["C:/Users/micha/Documents/mechenko_main/PEDAGOGY/fa23/CS4530/project/team111-project/implementation/src/components/SpreadsheetPage.component.tsx"],"sourcesContent":["import React from \"react\";\nimport SpreadsheetCell from \"./SpreadsheetCell.component\";\nimport { SpreadSheetPageModel } from \"../model/domain/spreadsheet-page.model\";\nimport { SpreadsheetCellModel } from \"../model/domain/cells/spreadsheet-cell.model\";\n\ninterface PageProp {\n  pageModel: SpreadSheetPageModel;\n  handleCellClick(cell: SpreadsheetCellModel, reference: string): void;\n  selectedCell: SpreadsheetCellModel;\n}\n\nexport default function SpreadsheetPage({\n  pageModel,\n  handleCellClick,\n  selectedCell,\n}: PageProp) {\n  const sheetCells: SpreadsheetCellModel[][] = pageModel.getSheet();\n\n  const handleCellDisplay = (cell: SpreadsheetCellModel) => {\n    return cell.getDisplay();\n  };\n\n  const renderCells = () => {\n    const rows = sheetCells.map((row, rowIndex) => {\n      const cols = row.map((cell, colIndex) => {\n        return (\n          <SpreadsheetCell\n            key={pageModel\n              .getCellAt(rowIndex, colIndex)\n              .determineReference(rowIndex, colIndex)}\n            reference={pageModel\n              .getCellAt(rowIndex, colIndex)\n              .determineReference(rowIndex, colIndex)}\n            cellModel={cell}\n            isSelected={\n              pageModel.getSelectedCellReference() ===\n              pageModel\n                .getCellAt(rowIndex, colIndex)\n                .determineReference(rowIndex, colIndex)\n            }\n            handleCellClick={handleCellClick}\n            cellDisplay={handleCellDisplay(\n              pageModel.getCellAt(rowIndex, colIndex)\n            )}\n          />\n        );\n      });\n\n      return (\n        <div key={rowIndex} className=\"flex flex-row\">\n          {cols}\n        </div>\n      );\n    });\n    return rows;\n  };\n\n  return <>{renderCells()}</>;\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,eAAe,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAU1D,eAAe,SAASC,eAAeA,CAAC;EACtCC,SAAS;EACTC,eAAe;EACfC;AACQ,CAAC,EAAE;EACX,MAAMC,UAAoC,GAAGH,SAAS,CAACI,QAAQ,CAAC,CAAC;EAEjE,MAAMC,iBAAiB,GAAIC,IAA0B,IAAK;IACxD,OAAOA,IAAI,CAACC,UAAU,CAAC,CAAC;EAC1B,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,IAAI,GAAGN,UAAU,CAACO,GAAG,CAAC,CAACC,GAAG,EAAEC,QAAQ,KAAK;MAC7C,MAAMC,IAAI,GAAGF,GAAG,CAACD,GAAG,CAAC,CAACJ,IAAI,EAAEQ,QAAQ,KAAK;QACvC,oBACElB,OAAA,CAACF,eAAe;UAIdqB,SAAS,EAAEf,SAAS,CACjBgB,SAAS,CAACJ,QAAQ,EAAEE,QAAQ,CAAC,CAC7BG,kBAAkB,CAACL,QAAQ,EAAEE,QAAQ,CAAE;UAC1CI,SAAS,EAAEZ,IAAK;UAChBa,UAAU,EACRnB,SAAS,CAACoB,wBAAwB,CAAC,CAAC,KACpCpB,SAAS,CACNgB,SAAS,CAACJ,QAAQ,EAAEE,QAAQ,CAAC,CAC7BG,kBAAkB,CAACL,QAAQ,EAAEE,QAAQ,CACzC;UACDb,eAAe,EAAEA,eAAgB;UACjCoB,WAAW,EAAEhB,iBAAiB,CAC5BL,SAAS,CAACgB,SAAS,CAACJ,QAAQ,EAAEE,QAAQ,CACxC;QAAE,GAhBGd,SAAS,CACXgB,SAAS,CAACJ,QAAQ,EAAEE,QAAQ,CAAC,CAC7BG,kBAAkB,CAACL,QAAQ,EAAEE,QAAQ,CAAC;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAe1C,CAAC;MAEN,CAAC,CAAC;MAEF,oBACE7B,OAAA;QAAoB8B,SAAS,EAAC,eAAe;QAAAC,QAAA,EAC1Cd;MAAI,GADGD,QAAQ;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CAAC;IAEV,CAAC,CAAC;IACF,OAAOhB,IAAI;EACb,CAAC;EAED,oBAAOb,OAAA,CAAAE,SAAA;IAAA6B,QAAA,EAAGnB,WAAW,CAAC;EAAC,gBAAG,CAAC;AAC7B;AAACoB,EAAA,GA/CuB7B,eAAe;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}