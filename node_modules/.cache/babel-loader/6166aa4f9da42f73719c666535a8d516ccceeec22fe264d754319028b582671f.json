{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\Documents\\\\mechenko_main\\\\PEDAGOGY\\\\fa23\\\\CS4530\\\\project\\\\team111-project\\\\implementation\\\\src\\\\components\\\\SpreadsheetPage.component.tsx\";\nimport React from \"react\";\nimport SpreadsheetCell from \"./SpreadsheetCell.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SpreadsheetPage({\n  pageModel,\n  handleCellClick,\n  selectedCell\n}) {\n  const sheetCells = pageModel.getSheet();\n  const handleCellDisplay = cell => {\n    return cell.getDisplay();\n  };\n  function determineReference(row, col) {\n    const colChar = String.fromCharCode(64 + col);\n    const rowNum = row.toString();\n    return colChar + rowNum;\n  }\n  const renderCells = () => {\n    const rows = sheetCells.map((row, rowIndex) => {\n      const cols = row.map((cell, colIndex) => {\n        return /*#__PURE__*/_jsxDEV(SpreadsheetCell, {\n          reference: determineReference(rowIndex, colIndex),\n          cellModel: cell,\n          isSelected: pageModel.getSelectedCellReference() === determineReference(rowIndex, colIndex),\n          handleCellClick: handleCellClick,\n          cellDisplay: handleCellDisplay(pageModel.getCellAt(rowIndex, colIndex))\n        }, determineReference(rowIndex, colIndex), false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this);\n      });\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-row\",\n        children: cols\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this);\n    });\n    return rows;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: renderCells()\n  }, void 0, false);\n}\n_c = SpreadsheetPage;\nvar _c;\n$RefreshReg$(_c, \"SpreadsheetPage\");","map":{"version":3,"names":["React","SpreadsheetCell","jsxDEV","_jsxDEV","Fragment","_Fragment","SpreadsheetPage","pageModel","handleCellClick","selectedCell","sheetCells","getSheet","handleCellDisplay","cell","getDisplay","determineReference","row","col","colChar","String","fromCharCode","rowNum","toString","renderCells","rows","map","rowIndex","cols","colIndex","reference","cellModel","isSelected","getSelectedCellReference","cellDisplay","getCellAt","fileName","_jsxFileName","lineNumber","columnNumber","className","children","_c","$RefreshReg$"],"sources":["C:/Users/micha/Documents/mechenko_main/PEDAGOGY/fa23/CS4530/project/team111-project/implementation/src/components/SpreadsheetPage.component.tsx"],"sourcesContent":["import React from \"react\";\nimport SpreadsheetCell from \"./SpreadsheetCell.component\";\nimport { SpreadSheetPageModel } from \"../model/domain/spreadsheet-page.model\";\nimport { SpreadsheetCellModel } from \"../model/domain/cells/spreadsheet-cell.model\";\n\ninterface PageProp {\n  pageModel: SpreadSheetPageModel;\n  handleCellClick(cell: SpreadsheetCellModel, reference: string): void;\n  selectedCell: SpreadsheetCellModel;\n}\n\nexport default function SpreadsheetPage({\n  pageModel,\n  handleCellClick,\n  selectedCell,\n}: PageProp) {\n  const sheetCells: SpreadsheetCellModel[][] = pageModel.getSheet();\n\n  const handleCellDisplay = (cell: SpreadsheetCellModel) => {\n    return cell.getDisplay();\n  };\n\n  function determineReference(row: number, col: number): string {\n    const colChar = String.fromCharCode(64 + col);\n    const rowNum = row.toString();\n\n    return colChar + rowNum;\n  }\n\n  const renderCells = () => {\n    const rows = sheetCells.map((row, rowIndex) => {\n      const cols = row.map((cell, colIndex) => {\n        return (\n          <SpreadsheetCell\n            key={determineReference(rowIndex, colIndex)}\n            reference={determineReference(rowIndex, colIndex)}\n            cellModel={cell}\n            isSelected={\n              pageModel.getSelectedCellReference() ===\n              determineReference(rowIndex, colIndex)\n            }\n            handleCellClick={handleCellClick}\n            cellDisplay={handleCellDisplay(\n              pageModel.getCellAt(rowIndex, colIndex)\n            )}\n          />\n        );\n      });\n\n      return (\n        <div key={rowIndex} className=\"flex flex-row\">\n          {cols}\n        </div>\n      );\n    });\n    return rows;\n  };\n\n  return <>{renderCells()}</>;\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,eAAe,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAU1D,eAAe,SAASC,eAAeA,CAAC;EACtCC,SAAS;EACTC,eAAe;EACfC;AACQ,CAAC,EAAE;EACX,MAAMC,UAAoC,GAAGH,SAAS,CAACI,QAAQ,CAAC,CAAC;EAEjE,MAAMC,iBAAiB,GAAIC,IAA0B,IAAK;IACxD,OAAOA,IAAI,CAACC,UAAU,CAAC,CAAC;EAC1B,CAAC;EAED,SAASC,kBAAkBA,CAACC,GAAW,EAAEC,GAAW,EAAU;IAC5D,MAAMC,OAAO,GAAGC,MAAM,CAACC,YAAY,CAAC,EAAE,GAAGH,GAAG,CAAC;IAC7C,MAAMI,MAAM,GAAGL,GAAG,CAACM,QAAQ,CAAC,CAAC;IAE7B,OAAOJ,OAAO,GAAGG,MAAM;EACzB;EAEA,MAAME,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,IAAI,GAAGd,UAAU,CAACe,GAAG,CAAC,CAACT,GAAG,EAAEU,QAAQ,KAAK;MAC7C,MAAMC,IAAI,GAAGX,GAAG,CAACS,GAAG,CAAC,CAACZ,IAAI,EAAEe,QAAQ,KAAK;QACvC,oBACEzB,OAAA,CAACF,eAAe;UAEd4B,SAAS,EAAEd,kBAAkB,CAACW,QAAQ,EAAEE,QAAQ,CAAE;UAClDE,SAAS,EAAEjB,IAAK;UAChBkB,UAAU,EACRxB,SAAS,CAACyB,wBAAwB,CAAC,CAAC,KACpCjB,kBAAkB,CAACW,QAAQ,EAAEE,QAAQ,CACtC;UACDpB,eAAe,EAAEA,eAAgB;UACjCyB,WAAW,EAAErB,iBAAiB,CAC5BL,SAAS,CAAC2B,SAAS,CAACR,QAAQ,EAAEE,QAAQ,CACxC;QAAE,GAVGb,kBAAkB,CAACW,QAAQ,EAAEE,QAAQ,CAAC;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAW5C,CAAC;MAEN,CAAC,CAAC;MAEF,oBACEnC,OAAA;QAAoBoC,SAAS,EAAC,eAAe;QAAAC,QAAA,EAC1Cb;MAAI,GADGD,QAAQ;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CAAC;IAEV,CAAC,CAAC;IACF,OAAOd,IAAI;EACb,CAAC;EAED,oBAAOrB,OAAA,CAAAE,SAAA;IAAAmC,QAAA,EAAGjB,WAAW,CAAC;EAAC,gBAAG,CAAC;AAC7B;AAACkB,EAAA,GAhDuBnC,eAAe;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}