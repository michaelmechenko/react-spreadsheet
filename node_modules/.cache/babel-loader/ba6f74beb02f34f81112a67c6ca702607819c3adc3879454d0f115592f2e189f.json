{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.convertCSVToArrayOfArrays = void 0;\nvar _convertStringToNumber = require(\"convert-string-to-number\");\nvar convertCSVToArrayOfArrays = function convertCSVToArrayOfArrays(data, _ref) {\n  var header = _ref.header,\n    separator = _ref.separator;\n  var csv = data;\n  var array = [];\n  var rows = csv.split(/(?!\\B\"[^\"]*)\\n(?![^\"]*\"\\B)/g);\n  rows.forEach(function (row, idx) {\n    var values = row.split(separator);\n    var checkedAndConvertedValues = [];\n    if (rows.length - 1 !== idx && (!header && idx !== 0 || header)) {\n      values.forEach(function (value) {\n        var convertedToNumber = (0, _convertStringToNumber.convertStringToNumber)(value);\n        var thisValue = Number.isNaN(convertedToNumber) ? value : convertedToNumber;\n        checkedAndConvertedValues.push(thisValue);\n      });\n      array.push(checkedAndConvertedValues);\n    }\n  });\n  return array;\n};\nexports.convertCSVToArrayOfArrays = convertCSVToArrayOfArrays;","map":{"version":3,"names":["Object","defineProperty","exports","value","convertCSVToArrayOfArrays","_convertStringToNumber","require","data","_ref","header","separator","csv","array","rows","split","forEach","row","idx","values","checkedAndConvertedValues","length","convertedToNumber","convertStringToNumber","thisValue","Number","isNaN","push"],"sources":["C:/Users/micha/Documents/mechenko_main/PEDAGOGY/fa23/CS4530/project/team111-project/implementation/node_modules/convert-csv-to-array/lib/modules/convert-csv-to-array-of-arrays.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.convertCSVToArrayOfArrays = void 0;\n\nvar _convertStringToNumber = require(\"convert-string-to-number\");\n\nvar convertCSVToArrayOfArrays = function convertCSVToArrayOfArrays(data, _ref) {\n  var header = _ref.header,\n      separator = _ref.separator;\n  var csv = data;\n  var array = [];\n  var rows = csv.split(/(?!\\B\"[^\"]*)\\n(?![^\"]*\"\\B)/g);\n  rows.forEach(function (row, idx) {\n    var values = row.split(separator);\n    var checkedAndConvertedValues = [];\n\n    if (rows.length - 1 !== idx && (!header && idx !== 0 || header)) {\n      values.forEach(function (value) {\n        var convertedToNumber = (0, _convertStringToNumber.convertStringToNumber)(value);\n        var thisValue = Number.isNaN(convertedToNumber) ? value : convertedToNumber;\n        checkedAndConvertedValues.push(thisValue);\n      });\n      array.push(checkedAndConvertedValues);\n    }\n  });\n  return array;\n};\n\nexports.convertCSVToArrayOfArrays = convertCSVToArrayOfArrays;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,yBAAyB,GAAG,KAAK,CAAC;AAE1C,IAAIC,sBAAsB,GAAGC,OAAO,CAAC,0BAA0B,CAAC;AAEhE,IAAIF,yBAAyB,GAAG,SAASA,yBAAyBA,CAACG,IAAI,EAAEC,IAAI,EAAE;EAC7E,IAAIC,MAAM,GAAGD,IAAI,CAACC,MAAM;IACpBC,SAAS,GAAGF,IAAI,CAACE,SAAS;EAC9B,IAAIC,GAAG,GAAGJ,IAAI;EACd,IAAIK,KAAK,GAAG,EAAE;EACd,IAAIC,IAAI,GAAGF,GAAG,CAACG,KAAK,CAAC,6BAA6B,CAAC;EACnDD,IAAI,CAACE,OAAO,CAAC,UAAUC,GAAG,EAAEC,GAAG,EAAE;IAC/B,IAAIC,MAAM,GAAGF,GAAG,CAACF,KAAK,CAACJ,SAAS,CAAC;IACjC,IAAIS,yBAAyB,GAAG,EAAE;IAElC,IAAIN,IAAI,CAACO,MAAM,GAAG,CAAC,KAAKH,GAAG,KAAK,CAACR,MAAM,IAAIQ,GAAG,KAAK,CAAC,IAAIR,MAAM,CAAC,EAAE;MAC/DS,MAAM,CAACH,OAAO,CAAC,UAAUZ,KAAK,EAAE;QAC9B,IAAIkB,iBAAiB,GAAG,CAAC,CAAC,EAAEhB,sBAAsB,CAACiB,qBAAqB,EAAEnB,KAAK,CAAC;QAChF,IAAIoB,SAAS,GAAGC,MAAM,CAACC,KAAK,CAACJ,iBAAiB,CAAC,GAAGlB,KAAK,GAAGkB,iBAAiB;QAC3EF,yBAAyB,CAACO,IAAI,CAACH,SAAS,CAAC;MAC3C,CAAC,CAAC;MACFX,KAAK,CAACc,IAAI,CAACP,yBAAyB,CAAC;IACvC;EACF,CAAC,CAAC;EACF,OAAOP,KAAK;AACd,CAAC;AAEDV,OAAO,CAACE,yBAAyB,GAAGA,yBAAyB"},"metadata":{},"sourceType":"script","externalDependencies":[]}