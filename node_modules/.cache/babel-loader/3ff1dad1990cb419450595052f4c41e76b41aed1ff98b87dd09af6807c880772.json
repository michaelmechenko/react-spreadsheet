{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.convertCSVToArrayOfObjects = void 0;\nvar _convertStringToNumber = require(\"convert-string-to-number\");\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar convertCSVToArrayOfObjects = function convertCSVToArrayOfObjects(data, _ref) {\n  var header = _ref.header,\n    separator = _ref.separator;\n  var csv = data;\n  var rows = csv.split(/(?!\\B\"[^\"]*)\\n(?![^\"]*\"\\B)/g);\n  var array = [];\n  var headerRow;\n  var headerObj;\n  var content = [];\n  rows.forEach(function (row, idx) {\n    if (idx === 0) {\n      headerRow = row.split(separator);\n      if (header) {\n        array.push(headerRow);\n      }\n      headerRow.forEach(function (headerItem) {\n        headerObj = Object.assign({}, headerObj, _defineProperty({}, headerItem, undefined));\n      });\n    } else if (rows.length - 1 !== idx) {\n      var values = row.split(separator);\n      values.forEach(function (value, i) {\n        var convertedToNumber = (0, _convertStringToNumber.convertStringToNumber)(value);\n        var thisValue = Number.isNaN(convertedToNumber) ? value : convertedToNumber;\n        headerObj = Object.assign({}, headerObj, _defineProperty({}, headerRow[i], thisValue));\n      });\n      content.push(headerObj);\n    }\n  });\n  array.push.apply(array, content);\n  return array;\n};\nexports.convertCSVToArrayOfObjects = convertCSVToArrayOfObjects;","map":{"version":3,"names":["Object","defineProperty","exports","value","convertCSVToArrayOfObjects","_convertStringToNumber","require","_defineProperty","obj","key","enumerable","configurable","writable","data","_ref","header","separator","csv","rows","split","array","headerRow","headerObj","content","forEach","row","idx","push","headerItem","assign","undefined","length","values","i","convertedToNumber","convertStringToNumber","thisValue","Number","isNaN","apply"],"sources":["C:/Users/micha/Documents/mechenko_main/PEDAGOGY/fa23/CS4530/project/team111-project/implementation/node_modules/convert-csv-to-array/lib/modules/convert-csv-to-array-of-objects.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.convertCSVToArrayOfObjects = void 0;\n\nvar _convertStringToNumber = require(\"convert-string-to-number\");\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar convertCSVToArrayOfObjects = function convertCSVToArrayOfObjects(data, _ref) {\n  var header = _ref.header,\n      separator = _ref.separator;\n  var csv = data;\n  var rows = csv.split(/(?!\\B\"[^\"]*)\\n(?![^\"]*\"\\B)/g);\n  var array = [];\n  var headerRow;\n  var headerObj;\n  var content = [];\n  rows.forEach(function (row, idx) {\n    if (idx === 0) {\n      headerRow = row.split(separator);\n\n      if (header) {\n        array.push(headerRow);\n      }\n\n      headerRow.forEach(function (headerItem) {\n        headerObj = Object.assign({}, headerObj, _defineProperty({}, headerItem, undefined));\n      });\n    } else if (rows.length - 1 !== idx) {\n      var values = row.split(separator);\n      values.forEach(function (value, i) {\n        var convertedToNumber = (0, _convertStringToNumber.convertStringToNumber)(value);\n        var thisValue = Number.isNaN(convertedToNumber) ? value : convertedToNumber;\n        headerObj = Object.assign({}, headerObj, _defineProperty({}, headerRow[i], thisValue));\n      });\n      content.push(headerObj);\n    }\n  });\n  array.push.apply(array, content);\n  return array;\n};\n\nexports.convertCSVToArrayOfObjects = convertCSVToArrayOfObjects;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,0BAA0B,GAAG,KAAK,CAAC;AAE3C,IAAIC,sBAAsB,GAAGC,OAAO,CAAC,0BAA0B,CAAC;AAEhE,SAASC,eAAeA,CAACC,GAAG,EAAEC,GAAG,EAAEN,KAAK,EAAE;EAAE,IAAIM,GAAG,IAAID,GAAG,EAAE;IAAER,MAAM,CAACC,cAAc,CAACO,GAAG,EAAEC,GAAG,EAAE;MAAEN,KAAK,EAAEA,KAAK;MAAEO,UAAU,EAAE,IAAI;MAAEC,YAAY,EAAE,IAAI;MAAEC,QAAQ,EAAE;IAAK,CAAC,CAAC;EAAE,CAAC,MAAM;IAAEJ,GAAG,CAACC,GAAG,CAAC,GAAGN,KAAK;EAAE;EAAE,OAAOK,GAAG;AAAE;AAEhN,IAAIJ,0BAA0B,GAAG,SAASA,0BAA0BA,CAACS,IAAI,EAAEC,IAAI,EAAE;EAC/E,IAAIC,MAAM,GAAGD,IAAI,CAACC,MAAM;IACpBC,SAAS,GAAGF,IAAI,CAACE,SAAS;EAC9B,IAAIC,GAAG,GAAGJ,IAAI;EACd,IAAIK,IAAI,GAAGD,GAAG,CAACE,KAAK,CAAC,6BAA6B,CAAC;EACnD,IAAIC,KAAK,GAAG,EAAE;EACd,IAAIC,SAAS;EACb,IAAIC,SAAS;EACb,IAAIC,OAAO,GAAG,EAAE;EAChBL,IAAI,CAACM,OAAO,CAAC,UAAUC,GAAG,EAAEC,GAAG,EAAE;IAC/B,IAAIA,GAAG,KAAK,CAAC,EAAE;MACbL,SAAS,GAAGI,GAAG,CAACN,KAAK,CAACH,SAAS,CAAC;MAEhC,IAAID,MAAM,EAAE;QACVK,KAAK,CAACO,IAAI,CAACN,SAAS,CAAC;MACvB;MAEAA,SAAS,CAACG,OAAO,CAAC,UAAUI,UAAU,EAAE;QACtCN,SAAS,GAAGtB,MAAM,CAAC6B,MAAM,CAAC,CAAC,CAAC,EAAEP,SAAS,EAAEf,eAAe,CAAC,CAAC,CAAC,EAAEqB,UAAU,EAAEE,SAAS,CAAC,CAAC;MACtF,CAAC,CAAC;IACJ,CAAC,MAAM,IAAIZ,IAAI,CAACa,MAAM,GAAG,CAAC,KAAKL,GAAG,EAAE;MAClC,IAAIM,MAAM,GAAGP,GAAG,CAACN,KAAK,CAACH,SAAS,CAAC;MACjCgB,MAAM,CAACR,OAAO,CAAC,UAAUrB,KAAK,EAAE8B,CAAC,EAAE;QACjC,IAAIC,iBAAiB,GAAG,CAAC,CAAC,EAAE7B,sBAAsB,CAAC8B,qBAAqB,EAAEhC,KAAK,CAAC;QAChF,IAAIiC,SAAS,GAAGC,MAAM,CAACC,KAAK,CAACJ,iBAAiB,CAAC,GAAG/B,KAAK,GAAG+B,iBAAiB;QAC3EZ,SAAS,GAAGtB,MAAM,CAAC6B,MAAM,CAAC,CAAC,CAAC,EAAEP,SAAS,EAAEf,eAAe,CAAC,CAAC,CAAC,EAAEc,SAAS,CAACY,CAAC,CAAC,EAAEG,SAAS,CAAC,CAAC;MACxF,CAAC,CAAC;MACFb,OAAO,CAACI,IAAI,CAACL,SAAS,CAAC;IACzB;EACF,CAAC,CAAC;EACFF,KAAK,CAACO,IAAI,CAACY,KAAK,CAACnB,KAAK,EAAEG,OAAO,CAAC;EAChC,OAAOH,KAAK;AACd,CAAC;AAEDlB,OAAO,CAACE,0BAA0B,GAAGA,0BAA0B"},"metadata":{},"sourceType":"script","externalDependencies":[]}