{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\Documents\\\\mechenko_main\\\\PEDAGOGY\\\\fa23\\\\CS4530\\\\project\\\\team111-project\\\\implementation\\\\src\\\\SpreadsheetMain.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./globals.css\";\nimport Header from \"./components/layout/Header\";\nimport SelectedCellBox from \"./components/SelectedCellBox.component\";\nimport InputBox from \"./components/InputBox.component\";\nimport SpreadSheetPage from \"./components/SpreadsheetPage.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SpreadsheetMain() {\n  _s();\n  const [selectedCell, setSelectedCell] = useState(\"\");\n  const [inputDisplay, setInputDisplay] = useState(\"\");\n  const handleInputEnter = input => {\n    handleSelectCell();\n    setInputDisplay(\"enter pressed\");\n  };\n  const handleSelectCell = (rowIndex, colIndex) => {\n    setSelectedCell(`${(rowIndex, colIndex)}`);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col pt-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-row w-full\",\n            children: [/*#__PURE__*/_jsxDEV(SelectedCellBox, {\n              buffer: \"cell\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n              inputEnter: handleInputEnter,\n              displayValue: inputDisplay,\n              setInputDisplay: setInputDisplay\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SpreadSheetPage, {\n            rows: 15,\n            cols: 15,\n            selectedCell: selectedCell,\n            setSelectedCell: handleSelectCell\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n/*\n\nfix editablecell usestate and apply to spreadsheetpage\n\nTODO:\n- refactor classes and interfaces and complete them; write tests\n- create components using these classes\n- create onclick for editable cells that changes the selectedcellbox's value\n- create usestate for editable cell that holds message state\n- create useeffect for inputbox that updates cell when enter is clicked\n*/\n\n// selectedcell handler that updates current selected cell\n// todo highlight\n// template string converter\n// path intellisense\n_s(SpreadsheetMain, \"CEM/Z0dLtEJDkRbe+kv/6/CcTe8=\");\n_c = SpreadsheetMain;\nvar _c;\n$RefreshReg$(_c, \"SpreadsheetMain\");","map":{"version":3,"names":["React","useState","Header","SelectedCellBox","InputBox","SpreadSheetPage","jsxDEV","_jsxDEV","Fragment","_Fragment","SpreadsheetMain","_s","selectedCell","setSelectedCell","inputDisplay","setInputDisplay","handleInputEnter","input","handleSelectCell","rowIndex","colIndex","children","className","fileName","_jsxFileName","lineNumber","columnNumber","buffer","inputEnter","displayValue","rows","cols","_c","$RefreshReg$"],"sources":["C:/Users/micha/Documents/mechenko_main/PEDAGOGY/fa23/CS4530/project/team111-project/implementation/src/SpreadsheetMain.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./globals.css\";\nimport Header from \"./components/layout/Header\";\nimport SelectedCellBox from \"./components/SelectedCellBox.component\";\nimport InputBox from \"./components/InputBox.component\";\nimport SpreadSheetPage from \"./components/SpreadsheetPage.component\";\n\nexport default function SpreadsheetMain() {\n  const [selectedCell, setSelectedCell] = useState(\"\");\n  const [inputDisplay, setInputDisplay] = useState(\"\");\n\n  const handleInputEnter = (input: string) => {\n    handleSelectCell();\n    setInputDisplay(\"enter pressed\");\n  };\n\n  const handleSelectCell = (rowIndex: string, colIndex: string) => {\n    setSelectedCell(`${(rowIndex, colIndex)}`);\n  };\n\n  return (\n    <>\n      <div className=\"main-container\">\n        <Header></Header>\n        <div className=\"flex justify-center\">\n          <div className=\"flex flex-col pt-5\">\n            <div className=\"flex flex-row w-full\">\n              <SelectedCellBox buffer=\"cell\"></SelectedCellBox>\n              <InputBox\n                inputEnter={handleInputEnter}\n                displayValue={inputDisplay}\n                setInputDisplay={setInputDisplay}\n              ></InputBox>\n            </div>\n            <SpreadSheetPage\n              rows={15}\n              cols={15}\n              selectedCell={selectedCell}\n              setSelectedCell={handleSelectCell}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n/*\n\nfix editablecell usestate and apply to spreadsheetpage\n\nTODO:\n- refactor classes and interfaces and complete them; write tests\n- create components using these classes\n- create onclick for editable cells that changes the selectedcellbox's value\n- create usestate for editable cell that holds message state\n- create useeffect for inputbox that updates cell when enter is clicked\n*/\n\n// selectedcell handler that updates current selected cell\n// todo highlight\n// template string converter\n// path intellisense\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,eAAe;AACtB,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,eAAe,MAAM,wCAAwC;AACpE,OAAOC,QAAQ,MAAM,iCAAiC;AACtD,OAAOC,eAAe,MAAM,wCAAwC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErE,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACxC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMe,gBAAgB,GAAIC,KAAa,IAAK;IAC1CC,gBAAgB,CAAC,CAAC;IAClBH,eAAe,CAAC,eAAe,CAAC;EAClC,CAAC;EAED,MAAMG,gBAAgB,GAAGA,CAACC,QAAgB,EAAEC,QAAgB,KAAK;IAC/DP,eAAe,CAAE,IAAGM,QAAQ,EAAEC,QAAQ,CAAE,EAAC,CAAC;EAC5C,CAAC;EAED,oBACEb,OAAA,CAAAE,SAAA;IAAAY,QAAA,eACEd,OAAA;MAAKe,SAAS,EAAC,gBAAgB;MAAAD,QAAA,gBAC7Bd,OAAA,CAACL,MAAM;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eACjBnB,OAAA;QAAKe,SAAS,EAAC,qBAAqB;QAAAD,QAAA,eAClCd,OAAA;UAAKe,SAAS,EAAC,oBAAoB;UAAAD,QAAA,gBACjCd,OAAA;YAAKe,SAAS,EAAC,sBAAsB;YAAAD,QAAA,gBACnCd,OAAA,CAACJ,eAAe;cAACwB,MAAM,EAAC;YAAM;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAkB,CAAC,eACjDnB,OAAA,CAACH,QAAQ;cACPwB,UAAU,EAAEZ,gBAAiB;cAC7Ba,YAAY,EAAEf,YAAa;cAC3BC,eAAe,EAAEA;YAAgB;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC,eACNnB,OAAA,CAACF,eAAe;YACdyB,IAAI,EAAE,EAAG;YACTC,IAAI,EAAE,EAAG;YACTnB,YAAY,EAAEA,YAAa;YAC3BC,eAAe,EAAEK;UAAiB;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBACN,CAAC;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAAf,EAAA,CAtDwBD,eAAe;AAAAsB,EAAA,GAAftB,eAAe;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}