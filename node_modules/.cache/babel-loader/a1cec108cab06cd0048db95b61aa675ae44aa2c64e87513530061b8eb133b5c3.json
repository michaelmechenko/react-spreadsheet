{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\Documents\\\\mechenko_main\\\\PEDAGOGY\\\\fa23\\\\CS4530\\\\project\\\\team111-project\\\\implementation\\\\src\\\\SpreadsheetMain.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./globals.css\";\nimport Header from \"./components/layout/Header\";\nimport SelectedCellBox from \"./components/SelectedCellBox.component\";\nimport InputBox from \"./components/InputBox.component\";\nimport SpreadSheetPage from \"./components/SpreadsheetPage.component\";\nimport { SpreadSheetPageModel } from \"./model/domain/spreadsheet-page.model\";\nimport PagesButton from \"./components/layout/PagesButton\";\nimport ImportButton from \"./components/layout/ImportButton\";\nimport ExportButton from \"./components/layout/ExportButton\";\n\n/*\nCHANGES MADE BECAUSE I SCREWED UP THE MR\n- changed how cell reference is computed\n- added row/col attribute to cell and page\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SpreadsheetMain() {\n  _s();\n  const pageModel = new SpreadSheetPageModel(\"\", 17);\n  // have data model as usestate? in spreadsheetpage component\n  // useeffect updates it any time data has changed\n\n  const [inputDisplay, setInputDisplay] = useState(\"\");\n\n  // move to page itself\n  const [selectedPageCell, setSelectedPageCell] = useState(pageModel.getSelectedCell());\n  const updateSelectedCell = reference => {\n    pageModel.setSelectedCell(pageModel.getCellFromReference(reference));\n    setSelectedPageCell(pageModel.getSelectedCell());\n  };\n  const handleInputEnter = input => {\n    setInputDisplay(selectedPageCell.getReference());\n    return input;\n  };\n\n  //  *** NEED TO FIX CELL'S DISPLAY UPDATING\n  // usestate celldisplay in cell component, setter function in parent and passed to state\n  // also maybe useeffect\n  // * NEED TO CREATE NEW OBJECT INSTEAD OF DIRECTLY UPDATING OBJECT PROPERTIES\n  // create method in cell that returns a new cell object with given display\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col pt-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-row w-full space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(ImportButton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ExportButton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-row w-full pt-2\",\n            children: /*#__PURE__*/_jsxDEV(PagesButton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-row w-full\",\n            children: [/*#__PURE__*/_jsxDEV(SelectedCellBox, {\n              display: selectedPageCell.getReference()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n              inputEnter: handleInputEnter,\n              displayValue: inputDisplay,\n              setInputDisplay: setInputDisplay\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SpreadSheetPage, {\n            pageModel: pageModel,\n            handleCellClick: updateSelectedCell,\n            selectedCell: selectedPageCell,\n            setCellValue: handleInputEnter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(SpreadsheetMain, \"Qs74/eNP5/XV1J6IQNLhUplVM5E=\");\n_c = SpreadsheetMain;\nvar _c;\n$RefreshReg$(_c, \"SpreadsheetMain\");","map":{"version":3,"names":["React","useState","Header","SelectedCellBox","InputBox","SpreadSheetPage","SpreadSheetPageModel","PagesButton","ImportButton","ExportButton","jsxDEV","_jsxDEV","Fragment","_Fragment","SpreadsheetMain","_s","pageModel","inputDisplay","setInputDisplay","selectedPageCell","setSelectedPageCell","getSelectedCell","updateSelectedCell","reference","setSelectedCell","getCellFromReference","handleInputEnter","input","getReference","children","className","fileName","_jsxFileName","lineNumber","columnNumber","display","inputEnter","displayValue","handleCellClick","selectedCell","setCellValue","_c","$RefreshReg$"],"sources":["C:/Users/micha/Documents/mechenko_main/PEDAGOGY/fa23/CS4530/project/team111-project/implementation/src/SpreadsheetMain.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./globals.css\";\nimport Header from \"./components/layout/Header\";\nimport SelectedCellBox from \"./components/SelectedCellBox.component\";\nimport InputBox from \"./components/InputBox.component\";\nimport SpreadSheetPage from \"./components/SpreadsheetPage.component\";\nimport { SpreadSheetPageModel } from \"./model/domain/spreadsheet-page.model\";\nimport PagesButton from \"./components/layout/PagesButton\";\nimport ImportButton from \"./components/layout/ImportButton\";\nimport ExportButton from \"./components/layout/ExportButton\";\n\n/*\nCHANGES MADE BECAUSE I SCREWED UP THE MR\n- changed how cell reference is computed\n- added row/col attribute to cell and page\n*/\n\nexport default function SpreadsheetMain() {\n  const pageModel: SpreadSheetPageModel = new SpreadSheetPageModel(\"\", 17);\n  // have data model as usestate? in spreadsheetpage component\n  // useeffect updates it any time data has changed\n\n  const [inputDisplay, setInputDisplay] = useState(\"\");\n\n  // move to page itself\n  const [selectedPageCell, setSelectedPageCell] = useState(\n    pageModel.getSelectedCell()\n  );\n\n  const updateSelectedCell = (reference: string) => {\n    pageModel.setSelectedCell(pageModel.getCellFromReference(reference));\n    setSelectedPageCell(pageModel.getSelectedCell());\n  };\n\n  const handleInputEnter = (input: string): string => {\n    setInputDisplay(selectedPageCell.getReference());\n    return input;\n  };\n\n  //  *** NEED TO FIX CELL'S DISPLAY UPDATING\n  // usestate celldisplay in cell component, setter function in parent and passed to state\n  // also maybe useeffect\n  // * NEED TO CREATE NEW OBJECT INSTEAD OF DIRECTLY UPDATING OBJECT PROPERTIES\n  // create method in cell that returns a new cell object with given display\n\n  return (\n    <>\n      <div className=\"main-container\">\n        <Header></Header>\n        <div className=\"flex justify-center\">\n          <div className=\"flex flex-col pt-5\">\n            <div className=\"flex flex-row w-full space-x-2\">\n              <ImportButton />\n              <ExportButton />\n            </div>\n            <div className=\"flex flex-row w-full pt-2\">\n              <PagesButton />\n            </div>\n            <div className=\"flex flex-row w-full\">\n              <SelectedCellBox display={selectedPageCell.getReference()} />\n              <InputBox\n                inputEnter={handleInputEnter}\n                displayValue={inputDisplay}\n                setInputDisplay={setInputDisplay}\n              />\n            </div>\n            <SpreadSheetPage\n              pageModel={pageModel}\n              handleCellClick={updateSelectedCell}\n              selectedCell={selectedPageCell}\n              setCellValue={handleInputEnter}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}