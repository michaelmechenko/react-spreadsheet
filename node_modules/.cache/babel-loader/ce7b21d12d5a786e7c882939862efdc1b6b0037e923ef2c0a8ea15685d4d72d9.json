{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\Documents\\\\mechenko_main\\\\PEDAGOGY\\\\fa23\\\\CS4530\\\\project\\\\team111-project\\\\implementation\\\\src\\\\components\\\\SpreadsheetPage.component.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport SpreadsheetCell from \"./SpreadsheetCell.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SpreadsheetPage({\n  pageModel,\n  handleCellClick,\n  selectedCell\n}) {\n  _s();\n  const sheetCells = pageModel.getSheet();\n  function determineReference(row, col) {\n    const colChar = String.fromCharCode(64 + col);\n    const rowNum = row.toString();\n    return colChar + rowNum;\n  }\n  const renderCells = () => {\n    const rows = sheetCells.map((row, rowIndex) => {\n      const cols = row.map((cell, colIndex) => {\n        return /*#__PURE__*/_jsxDEV(SpreadsheetCell, {\n          reference: determineReference(rowIndex, colIndex),\n          cellModel: cell,\n          isSelected: selectedCell.getReference() === determineReference(rowIndex, colIndex),\n          handleCellClick: handleCellClick,\n          cellDisplay: cell.getDisplay()\n        }, determineReference(rowIndex, colIndex), false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this);\n      });\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-row\",\n        children: cols\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this);\n    });\n    return rows;\n  };\n  useEffect(() => {\n    renderCells();\n    return () => {};\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: renderCells()\n  }, void 0, false);\n}\n_s(SpreadsheetPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = SpreadsheetPage;\nvar _c;\n$RefreshReg$(_c, \"SpreadsheetPage\");","map":{"version":3,"names":["React","useEffect","SpreadsheetCell","jsxDEV","_jsxDEV","Fragment","_Fragment","SpreadsheetPage","pageModel","handleCellClick","selectedCell","_s","sheetCells","getSheet","determineReference","row","col","colChar","String","fromCharCode","rowNum","toString","renderCells","rows","map","rowIndex","cols","cell","colIndex","reference","cellModel","isSelected","getReference","cellDisplay","getDisplay","fileName","_jsxFileName","lineNumber","columnNumber","className","children","_c","$RefreshReg$"],"sources":["C:/Users/micha/Documents/mechenko_main/PEDAGOGY/fa23/CS4530/project/team111-project/implementation/src/components/SpreadsheetPage.component.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport SpreadsheetCell from \"./SpreadsheetCell.component\";\nimport { SpreadSheetPageModel } from \"../model/domain/spreadsheet-page.model\";\nimport { SpreadsheetCellModel } from \"../model/domain/cells/spreadsheet-cell.model\";\n\ninterface PageProp {\n  pageModel: SpreadSheetPageModel;\n  handleCellClick(cell: SpreadsheetCellModel, reference: string): void;\n  selectedCell: SpreadsheetCellModel;\n}\n\nexport default function SpreadsheetPage({\n  pageModel,\n  handleCellClick,\n  selectedCell,\n}: PageProp) {\n  const sheetCells: SpreadsheetCellModel[][] = pageModel.getSheet();\n\n  function determineReference(row: number, col: number): string {\n    const colChar = String.fromCharCode(64 + col);\n    const rowNum = row.toString();\n\n    return colChar + rowNum;\n  }\n\n  const renderCells = () => {\n    const rows = sheetCells.map((row, rowIndex) => {\n      const cols = row.map((cell, colIndex) => {\n        return (\n          <SpreadsheetCell\n            key={determineReference(rowIndex, colIndex)}\n            reference={determineReference(rowIndex, colIndex)}\n            cellModel={cell}\n            isSelected={\n              selectedCell.getReference() ===\n              determineReference(rowIndex, colIndex)\n            }\n            handleCellClick={handleCellClick}\n            cellDisplay={cell.getDisplay()}\n          />\n        );\n      });\n\n      return (\n        <div key={rowIndex} className=\"flex flex-row\">\n          {cols}\n        </div>\n      );\n    });\n    return rows;\n  };\n\n  useEffect(() => {\n    renderCells();\n    return () => {};\n  }, []);\n\n  return <>{renderCells()}</>;\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,eAAe,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAU1D,eAAe,SAASC,eAAeA,CAAC;EACtCC,SAAS;EACTC,eAAe;EACfC;AACQ,CAAC,EAAE;EAAAC,EAAA;EACX,MAAMC,UAAoC,GAAGJ,SAAS,CAACK,QAAQ,CAAC,CAAC;EAEjE,SAASC,kBAAkBA,CAACC,GAAW,EAAEC,GAAW,EAAU;IAC5D,MAAMC,OAAO,GAAGC,MAAM,CAACC,YAAY,CAAC,EAAE,GAAGH,GAAG,CAAC;IAC7C,MAAMI,MAAM,GAAGL,GAAG,CAACM,QAAQ,CAAC,CAAC;IAE7B,OAAOJ,OAAO,GAAGG,MAAM;EACzB;EAEA,MAAME,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,IAAI,GAAGX,UAAU,CAACY,GAAG,CAAC,CAACT,GAAG,EAAEU,QAAQ,KAAK;MAC7C,MAAMC,IAAI,GAAGX,GAAG,CAACS,GAAG,CAAC,CAACG,IAAI,EAAEC,QAAQ,KAAK;QACvC,oBACExB,OAAA,CAACF,eAAe;UAEd2B,SAAS,EAAEf,kBAAkB,CAACW,QAAQ,EAAEG,QAAQ,CAAE;UAClDE,SAAS,EAAEH,IAAK;UAChBI,UAAU,EACRrB,YAAY,CAACsB,YAAY,CAAC,CAAC,KAC3BlB,kBAAkB,CAACW,QAAQ,EAAEG,QAAQ,CACtC;UACDnB,eAAe,EAAEA,eAAgB;UACjCwB,WAAW,EAAEN,IAAI,CAACO,UAAU,CAAC;QAAE,GAR1BpB,kBAAkB,CAACW,QAAQ,EAAEG,QAAQ,CAAC;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAS5C,CAAC;MAEN,CAAC,CAAC;MAEF,oBACElC,OAAA;QAAoBmC,SAAS,EAAC,eAAe;QAAAC,QAAA,EAC1Cd;MAAI,GADGD,QAAQ;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CAAC;IAEV,CAAC,CAAC;IACF,OAAOf,IAAI;EACb,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACdqB,WAAW,CAAC,CAAC;IACb,OAAO,MAAM,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOlB,OAAA,CAAAE,SAAA;IAAAkC,QAAA,EAAGlB,WAAW,CAAC;EAAC,gBAAG,CAAC;AAC7B;AAACX,EAAA,CA/CuBJ,eAAe;AAAAkC,EAAA,GAAflC,eAAe;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}