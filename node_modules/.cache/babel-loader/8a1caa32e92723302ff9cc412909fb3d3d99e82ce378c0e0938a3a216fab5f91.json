{"ast":null,"code":"var _class;\nexport class CellText {\n  constructor(_font, _size, _italics, _bold, _underline, _color) {\n    this._font = _font;\n    this._size = _size;\n    this._italics = _italics;\n    this._bold = _bold;\n    this._underline = _underline;\n    this._color = _color;\n  }\n  get font() {\n    return this._font;\n  }\n  get size() {\n    return this._size;\n  }\n  get italics() {\n    return this._italics;\n  }\n  get bold() {\n    return this._bold;\n  }\n  get underline() {\n    return this._underline;\n  }\n  get color() {\n    return this._color;\n  }\n  set font(font) {\n    this._font = font;\n  }\n  set size(size) {\n    this._size = size;\n  }\n  set italics(isItalics) {\n    this._italics = isItalics;\n  }\n  set bold(isBold) {\n    this._bold = isBold;\n  }\n  set underline(isUnderline) {\n    this._underline = isUnderline;\n  }\n  set color(color) {\n    this._color = color;\n  }\n}\n_class = CellText;\n// eslint-disable-next-line @typescript-eslint/typedef\nCellText.Builder = class Builder {\n  constructor() {\n    this._font = 'default';\n    // THIS SHOULD BE AN ENUM\n    this._size = 6;\n    this._italics = false;\n    this._bold = false;\n    this._underline = false;\n    this._color = 'black';\n  }\n  // THIS SHOULD BE AN ENUM OR MAYBE HEX\n\n  withFont(font) {\n    this._font = font;\n    return this;\n  }\n  withSize(size) {\n    this._size = size;\n    return this;\n  }\n  withItalics(isItalics) {\n    this._italics = isItalics;\n    return this;\n  }\n  withBold(isBold) {\n    this._bold = isBold;\n    return this;\n  }\n  withUnderline(isUnderline) {\n    this._underline = isUnderline;\n    return this;\n  }\n  withColor(color) {\n    this._color = color;\n    return this;\n  }\n  build() {\n    return new _class(this._font, this._size, this._italics, this._bold, this._underline, this._color);\n  }\n};","map":{"version":3,"names":["CellText","constructor","_font","_size","_italics","_bold","_underline","_color","font","size","italics","bold","underline","color","isItalics","isBold","isUnderline","_class","Builder","withFont","withSize","withItalics","withBold","withUnderline","withColor","build"],"sources":["C:/Users/micha/Documents/mechenko_main/PEDAGOGY/fa23/CS4530/project/team111-project/implementation/src/model/domain/cells/cell-text.model.ts"],"sourcesContent":["export class CellText {\n\n    // eslint-disable-next-line @typescript-eslint/typedef\n    public static Builder = class Builder {\n\n    private _font: string = 'default'; // THIS SHOULD BE AN ENUM\n    private _size: number = 6;\n    private _italics: boolean = false;\n    private _bold: boolean = false;\n    private _underline: boolean = false;\n    private _color: string = 'black'; // THIS SHOULD BE AN ENUM OR MAYBE HEX\n\n    public withFont(font: string): Builder {\n      this._font = font;\n      return this;\n    }\n\n    public withSize(size: number): Builder {\n      this._size = size;\n      return this;\n    }\n\n    public withItalics(isItalics: boolean): Builder {\n      this._italics = isItalics;\n      return this;\n    }\n\n    public withBold(isBold: boolean): Builder {\n      this._bold = isBold;\n      return this;\n    }\n\n    public withUnderline(isUnderline: boolean): Builder {\n      this._underline = isUnderline;\n      return this;\n    }\n\n    public withColor(color: string): Builder {\n        this._color = color;\n        return this;\n      }\n  \n\n    public build(): CellText {\n      return new CellText(\n        this._font,\n        this._size,\n        this._italics,\n        this._bold,\n        this._underline,\n        this._color,\n      );\n    }\n  };\n\n  public constructor(\n    private _font: string,\n    private _size: number,\n    private _italics: boolean,\n    private _bold: boolean,\n    private _underline: boolean,\n    private _color: string,\n  ) {}\n\n  public get font(): string {\n    return this._font;\n  }\n\n  public get size(): number {\n    return this._size;\n  }\n  \n  public get italics(): boolean {\n    return this._italics;\n  }\n\n  public get bold(): boolean {\n    return this._bold;\n  }\n\n  public get underline(): boolean {\n    return this._underline;\n  }\n\n  public get color(): string {\n    return this._color;\n  }\n\n  public set font(font: string) {\n    this._font = font;\n  }\n\n  public set size(size: number) {\n    this._size = size;\n  }\n  \n  public set italics(isItalics: boolean) {\n    this._italics = isItalics;\n  }\n\n  public set bold(isBold: boolean) {\n    this._bold = isBold;\n  }\n\n  public set underline(isUnderline: boolean) {\n    this._underline = isUnderline;\n  }\n\n  public set color(color: string) {\n    this._color = color;\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}